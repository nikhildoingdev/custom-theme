<div class="cart__page">
    {% if cart.empty? %}
    <div class="cart__empty">
        <p>Your bag is empty (for now).</p>
        <a href="/" class="cart__shopping-link">Start Shopping</a>
    </div>
    {% else %}
    <div class="cart__title">
        <h2>Product</h2>
        <h2>Total</h2>
    </div>
    <div class="cart__container">
        {% for item in cart.items %}
        <div class="cart__item" data-index="{{ forloop.index }}">
            <div class="cart__item-product-details">
                <div class="image-container">
                    <img src="{{ item.image |  image_url: width: 300 }}" alt="{{ item.image.alt }}">
                </div>
                <div class="cart__item-product-info">
                    <h2 class="cart__item-product-title">{{ item.product.title }}</h2>
                    {% if item.variant.title != 'Default Title' %}
                    <p class="cart__item-variant-title">{{ item.variant.title }}</p>
                    {% endif %}
                    <div class="cart__item-price">
                        <p class="cart__item-discounted-price">
                            {{ item.final_price | money }}
                        </p>
                        <del class="cart__item-original-price">
                            {{ item.original_price | money }}
                        </del>
                    </div>
                    <div class="cart__item-quantity">
                        <span data-index="{{ forloop.index }}" class="cart__item-quantity-minus">-</span>
                        <p class="cart__item-current-quantity">{{ item.quantity }}</p>
                        <span data-index="{{ forloop.index }}" class="cart__item-quantity-plus">+</span>
                    </div>
                </div>
            </div>
            <div>
                <p class="cart__item-final-price">{{ item.final_line_price |  money }}</p>
            </div>
        </div>
        {% endfor %}
        <div class="cart__total">
            <h2>Cart Total</h2>
            <p class="cart__total-price">{{ cart.total_price | money }}</p>
        </div>
    </div>
    <div class="cart__footer">
        <a href="/cart/clear" class="cart__clear">Clear Cart</a>
        <a href="/checkout" class="cart__checkout">Checkout</a>
    </div>
    {% endif %}
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        document.body.addEventListener('click', async (e) => {
            const isPlus = e.target.classList.contains('cart__item-quantity-plus');
            const isMinus = e.target.classList.contains('cart__item-quantity-minus');

            if (!isPlus && !isMinus) return;

            const index = Number(e.target.getAttribute('data-index'));
            const cartItem = e.target.closest('.cart__item');
            const finalPrice = cartItem.querySelector('.cart__item-final-price');
            const quantityDisplay = cartItem.querySelector('.cart__item-current-quantity');
            let quantity = Number(quantityDisplay.textContent);

            quantity = isPlus ? quantity + 1 : quantity - 1;

            if (quantity > 0) {
                quantityDisplay.textContent = quantity;
            }

            try {
                await fetch('/cart/change.js', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        line: index,
                        quantity: quantity
                    })
                });

                const res = await fetch('/cart.js');
                const cart = await res.json();

                console.log(cart);

                updateCartUI(cart, cartItem);

            } catch (error) {
                console.error('Error updating cart:', error);
            }

            function updateCartUI(cart, cartItem) {
                const index = Number(cartItem.getAttribute('data-index')) - 1;
                const item = cart.items[index];

                const discountedPrice = document.querySelector('.cart__item-discounted-price');
                const originalPrice = document.querySelector('.cart__item-original-price');

                if (item.final_price !== item.original_price) {
                    discountedPrice.textContent = formatMoney(item.final_price)
                } else {
                    discountedPrice.textContent = formatMoney(item.final_price)
                }

                cartItem.querySelector('.cart__item-final-price').textContent = formatMoney(item.final_line_price);
                document.querySelector('.cart__total-price').textContent = formatMoney(cart.total_price);
            }

            function formatMoney(cents) {
                return new Intl.NumberFormat('en-US', {
                    style: 'currency',
                    currency: 'USD'
                }).format(cents / 100)
            }
        });
    });
</script>

<style>
    .cart__empty {
        display: flex;
        height: 80%;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        gap: 2rem;
    }

    .cart__shopping-link {
        background: #000;
        color: #fff;
        padding: 1rem 2rem;
        border: 1px solid #000;
        transition: all .3s ease-in-out;
    }

    .cart__shopping-link:hover {
        background: #fff;
        color: #000;
    }

    .cart__container {
        display: flex;
        flex-direction: column;
        padding: 1rem 2rem;
    }

    .image-container {
        width: 150px;
        height: 150px;
        border: 1px solid lightgray;
        border-radius: .5rem;
        overflow: hidden;
    }

    .cart__item {
        display: flex;
        justify-content: space-between;
        border-bottom: 1px solid lightgray;
        padding: 1rem 0;
    }

    .cart__item-product-details {
        display: flex;
        gap: 1rem;
    }

    .cart__item-product-title {
        font-size: 1rem;
        font-weight: 500;
    }

    .cart__item-variant-title {
        background: #000;
        color: #fff;
        width: fit-content;
        font-size: 0.75rem;
        padding: 0.25rem 1rem;
        border-radius: 0.25rem;
        margin-top: .25rem;
    }

    .cart__item-quantity {
        margin-top: .5rem;
        padding: .5rem 1rem;
        border: 1px solid #000;
        width: fit-content;
        min-width: 100px;
        display: flex;
        justify-items: center;
        align-items: center;
        gap: 2rem;
        cursor: pointer;
    }

    .cart__item-price {
        margin-top: 1rem;
        display: flex;
        gap: .5rem;
    }

    .cart__title,
    .cart__footer {
        padding: 1rem 2rem;
        display: flex;
        gap: .5rem;
    }

    .cart__title {
        justify-content: space-between;
    }

    .cart__title h2 {
        font-size: 1.25rem;
        font-weight: 500;
    }

    .cart__clear,
    .cart__checkout {
        border: 1px solid #000;
        border-radius: .25rem;
        padding: .5rem 2rem;
    }

    .cart__checkout {
        background: #000;
        color: #fff;
        transition: all .3s ease-in-out;
    }

    .cart__checkout:hover {
        background: #fff;
        color: #000;
    }

    .cart__total {
        margin-top: 1rem;
        display: flex;
        align-self: flex-end;
        align-items: center;
        gap: 1rem;
    }

    .cart__total>h2 {
        font-size: 1.2rem;
        font-weight: 500;
    }

    .cart__footer {
        justify-self: flex-end;
        align-self: flex-end;
    }
</style>
